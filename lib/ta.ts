export function ema(a:number[],p:number){const k=2/(p+1);const o=[a[0]];for(let i=1;i<a.length;i++){o[i]=a[i]*k+o[i-1]*(1-k);}return o;} export function rsi(a:number[],p=14){if(a.length<p+1)return Array(a.length).fill(50);const c=a.map((v,i)=>i?v-a[i-1]:0);let g=0,l=0;for(let i=1;i<=p;i++){const d=c[i];if(d>=0)g+=d;else l-=d;}let ag=g/p,al=l/p;const o=Array(p).fill(50);for(let i=p+1;i<a.length;i++){const d=c[i];if(d>=0){ag=(ag*(p-1)+d)/p;al=(al*(p-1))/p;}else{ag=(ag*(p-1))/p;al=(al*(p-1)-d)/p;}const rs=al===0?100:ag/al;o[i]=100-100/(1+rs);}return o;} export function macd(a:number[],f=12,s=26,sg=9){const fe=ema(a,f),se=ema(a,s);const m=a.map((_,i)=>fe[i]-se[i]);const sl=ema(m,sg);return {macdLine:m,signalLine:sl,histogram:m.map((v,i)=>v-sl[i])};}